variables:
  IMAGE_NAME: "$REGISTRY_USER/demo-app"
  IMAGE_TAG: python-app-1.1
  IMAGE_NAME_TAG: ${IMAGE_NAME}:${IMAGE_TAG}

stages:
  - test
  - build
  - deploy

# run_test:
#   stage: test
#   image: python:3.9-slim-bookworm
#   before_script:
#     - apt-get update && apt-get install make
#   script: 
#     - make test

# build_image:
#   stage: build
#   image: docker:24.0.7
#   services:
#     - docker:24.0.7-dind
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#     - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin
#   script:
#     - docker build -t $IMAGE_NAME_TAG .
#     - docker push $IMAGE_NAME_TAG

deploy:
  stage: deploy
  before_script:
    - apk add sshpass
    # - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    # - eval $(ssh-agent -s)
    # - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    # - mkdir -p ~/.ssh
    # - chmod 700 ~/.ssh
    # - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    # - chmod 644 ~/.ssh/known_hosts
  script:
    - sshpass $SSH_PASS ssh -o StrictHostKeyChecking=no $SSH_USER@$VM_IPADDRESS "echo someWord > file.txt"
    #    echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin &&
    #    docker ps -qf 'name=server' | xargs docker stop | xargs docker rm &&
    #    docker run --name server -d -p 5000:5000 $IMAGE_NAME_TAG"

